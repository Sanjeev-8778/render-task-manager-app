{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[tasks,setTasks]=useState([]);const[title,setTitle]=useState(\"\");useEffect(()=>{fetch(\"/tasks\").then(res=>res.json()).then(setTasks);},[]);const addTask=async()=>{await fetch(\"/tasks\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({title})});setTitle(\"\");window.location.reload();};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Task Manager\"}),/*#__PURE__*/_jsx(\"input\",{value:title,onChange:e=>setTitle(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:addTask,children:\"Add Task\"}),/*#__PURE__*/_jsx(\"ul\",{children:tasks.map((task,i)=>/*#__PURE__*/_jsx(\"li\",{children:task[1]},i))})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","App","tasks","setTasks","title","setTitle","fetch","then","res","json","addTask","method","headers","body","JSON","stringify","window","location","reload","children","value","onChange","e","target","onClick","map","task","i"],"sources":["C:/Users/Administrator/Desktop/react/Task-Manager-App/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"/tasks\").then(res => res.json()).then(setTasks);\r\n  }, []);\r\n\r\n  const addTask = async () => {\r\n    await fetch(\"/tasks\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ title }),\r\n    });\r\n    setTitle(\"\");\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Task Manager</h1>\r\n      <input value={title} onChange={e => setTitle(e.target.value)} />\r\n      <button onClick={addTask}>Add Task</button>\r\n      <ul>{tasks.map((task, i) => <li key={i}>{task[1]}</li>)}</ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACQ,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAEtCD,SAAS,CAAC,IAAM,CACdW,KAAK,CAAC,QAAQ,CAAC,CAACC,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAACJ,QAAQ,CAAC,CACxD,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAO,OAAO,CAAG,KAAAA,CAAA,GAAY,CAC1B,KAAM,CAAAJ,KAAK,CAAC,QAAQ,CAAE,CACpBK,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEX,KAAM,CAAC,CAChC,CAAC,CAAC,CACFC,QAAQ,CAAC,EAAE,CAAC,CACZW,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAC1B,CAAC,CAED,mBACElB,KAAA,QAAAmB,QAAA,eACErB,IAAA,OAAAqB,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBrB,IAAA,UAAOsB,KAAK,CAAEhB,KAAM,CAACiB,QAAQ,CAAEC,CAAC,EAAIjB,QAAQ,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAE,CAAC,cAChEtB,IAAA,WAAQ0B,OAAO,CAAEd,OAAQ,CAAAS,QAAA,CAAC,UAAQ,CAAQ,CAAC,cAC3CrB,IAAA,OAAAqB,QAAA,CAAKjB,KAAK,CAACuB,GAAG,CAAC,CAACC,IAAI,CAAEC,CAAC,gBAAK7B,IAAA,OAAAqB,QAAA,CAAaO,IAAI,CAAC,CAAC,CAAC,EAAXC,CAAgB,CAAC,CAAC,CAAK,CAAC,EAC1D,CAAC,CAEV,CAEA,cAAe,CAAA1B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}